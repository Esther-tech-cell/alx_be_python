class Book:
    """
    Represents a book in the library with a title, author,
    and its checked-out status.
    """
    def __init__(self, title, author):
        """
        Initializes a new Book instance.

        Args:
            title (str): The title of the book.
            author (str): The author of the book.
        """
        self.title = title
        self.author = author
        self._is_checked_out = False  # Private attribute to track availability

    def __str__(self):
        """
        Returns a string representation of the Book object.
        """
        return f"{self.title} by {self.author}"

class Library:
    """
    Manages a collection of Book objects, allowing books to be added,
    checked out, returned, and listed.
    """
    def __init__(self):
        """
        Initializes a new Library instance with an empty list of books.
        """
        self._books = []  # Private list to store Book objects

    def add_book(self, book):
        """
        Adds a Book object to the library's collection.

        Args:
            book (Book): The Book object to add.
        """
        if not isinstance(book, Book):
            print("Can only add Book objects to the library.")
            return
        self._books.append(book)
        print(f"Added '{book.title}' to the library.")

    def check_out_book(self, title):
        """
        Attempts to check out a book by its title.

        Args:
            title (str): The title of the book to check out.
        """
        found = False
        for book in self._books:
            if book.title == title:
                found = True
                if not book._is_checked_out:
                    book._is_checked_out = True
                    print(f"Successfully checked out '{title}'.")
                    return
                else:
                    print(f"'{title}' is already checked out.")
                    return
        if not found:
            print(f"Book with title '{title}' not found in the library.")

    def return_book(self, title):
        """
        Attempts to return a book by its title.

        Args:
            title (str): The title of the book to return.
        """
        found = False
        for book in self._books:
            if book.title == title:
                found = True
                if book._is_checked_out:
                    book._is_checked_out = False
                    print(f"Successfully returned '{title}'.")
                    return
                else:
                    print(f"'{title}' was not checked out.")
                    return
        if not found:
            print(f"Book with title '{title}' not found in the library.")

    def list_available_books(self):
        """
        Lists all books currently available in the library.
        """
        available_found = False
        for book in self._books:
            if not book._is_checked_out:
                print(book)
                available_found = True
        if not available_found and not self._books:
            print("The library is empty.")
        elif not available_found:
            print("No books are currently available.")