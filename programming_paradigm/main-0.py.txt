import sys
from bank_account import BankAccount

def main():
    """
    Main function to handle bank account operations via command-line arguments.
    """
    # Initialize the account with an example starting balance
    # As per the task, this script uses an initial balance of 100 for demonstration.
    try:
        account = BankAccount(100)
    except ValueError as e:
        print(f"Error initializing account: {e}")
        sys.exit(1)

    if len(sys.argv) < 2:
        print("Usage: python main-0.py <command>:<amount>")
        print("Commands: deposit, withdraw, display")
        sys.exit(1)

    # Split the command-line argument into command and parameters
    command_parts = sys.argv[1].split(':')
    command = command_parts[0].lower() # Ensure command is lowercase for consistent matching
    amount = None

    if len(command_parts) > 1:
        try:
            amount = float(command_parts[1])
        except ValueError:
            print(f"Error: Amount '{command_parts[1]}' must be a number.")
            sys.exit(1)

    if command == "deposit":
        if amount is not None:
            account.deposit(amount)
            print(f"Deposited: ${amount:.2f}")
        else:
            print("Usage: python main-0.py deposit:<amount>")
    elif command == "withdraw":
        if amount is not None:
            if account.withdraw(amount):
                print(f"Withdrew: ${amount:.2f}")
            else:
                print("Insufficient funds.")
        else:
            print("Usage: python main-0.py withdraw:<amount>")
    elif command == "display":
        account.display_balance()
    else:
        print("Invalid command.")
        print("Commands: deposit, withdraw, display")
        sys.exit(1)

if __name__ == "__main__":
    main()